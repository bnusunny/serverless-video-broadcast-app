{
  "service": {
    "service": "video-broadcast",
    "serviceObject": {
      "name": "video-broadcast"
    },
    "provider": {
      "stage": "dev",
      "region": "ap-northeast-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "profile": "global",
      "memorySize": 512,
      "timeout": 30,
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:GetObject",
            "s3:PutObject"
          ],
          "Resource": "arn:aws:s3:::*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "elastictranscoder:Read*",
            "elastictranscoder:List*",
            "elastictranscoder:*Job",
            "elastictranscoder:*Preset",
            "s3:List*",
            "iam:List*",
            "sns:List*",
            "dynamodb:DescribeStream",
            "dynamodb:GetRecords",
            "dynamodb:GetItem",
            "dynamodb:GetShardIterator",
            "dynamodb:ListStreams",
            "dynamodb:Scan",
            "logs:CreateLogGroup",
            "logs:CreateLogStream",
            "logs:PutLogEvents"
          ],
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem"
          ],
          "Resource": "arn:aws:dynamodb:ap-northeast-1:373534280245:table/Videos"
        },
        {
          "Effect": "Allow",
          "Action": [
            "sns:Publish"
          ],
          "Resource": "arn:aws:sns:ap-northeast-1:373534280245:prod-alert"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "TranscodeDashvideoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/video-broadcast-dev-transcode-video"
            }
          },
          "PushDashtranscodedDashurlDashtoDashdbLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/video-broadcast-dev-push-transcoded-url-to-db"
            }
          },
          "GetDashallDashvideosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/video-broadcast-dev-get-all-videos"
            }
          },
          "PushDashuserDashvotesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/video-broadcast-dev-push-user-votes"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "video-broadcast",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/video-broadcast-dev-transcode-video:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/video-broadcast-dev-push-transcoded-url-to-db:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/video-broadcast-dev-get-all-videos:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/video-broadcast-dev-push-user-votes:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/video-broadcast-dev-transcode-video:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/video-broadcast-dev-push-transcoded-url-to-db:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/video-broadcast-dev-get-all-videos:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/video-broadcast-dev-push-user-votes:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][3]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sns:Publish"
                        ],
                        "Resource": [
                          "arn:aws:sns:ap-northeast-1:373534280245:prod-alert"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sns:Publish"
                        ],
                        "Resource": [
                          "arn:aws:sns:ap-northeast-1:373534280245:prod-alert"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sns:Publish"
                        ],
                        "Resource": [
                          "arn:aws:sns:ap-northeast-1:373534280245:prod-alert"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sns:Publish"
                        ],
                        "Resource": [
                          "arn:aws:sns:ap-northeast-1:373534280245:prod-alert"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "video-broadcast",
                    "dev",
                    "ap-northeast-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "TranscodeDashvideoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/video-broadcast/dev/1537289174037-2018-09-18T16:46:14.037Z/video-broadcast.zip"
              },
              "FunctionName": "video-broadcast-dev-transcode-video",
              "Handler": "transcode-video/index.handler",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 30,
              "DeadLetterConfig": {
                "TargetArn": "arn:aws:sns:ap-northeast-1:373534280245:prod-alert"
              },
              "Environment": {
                "Variables": {
                  "ELASTIC_TRANSCODER_PIPELINE_ID": "1536490765349-wdq1g6",
                  "ELASTIC_TRANSCODER_REGION": "ap-northeast-1"
                }
              }
            },
            "DependsOn": [
              "TranscodeDashvideoLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "TranscodeDashvideoLambdaVersion8VPMohfbyGjiV5Q6xO3QOmNbdc7caNviQ94FZ8rk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "TranscodeDashvideoLambdaFunction"
              },
              "CodeSha256": "IqoeBC+pPhngrdqAGuSM2S0NZhI+S9w3vcJ29BOtE/Q="
            }
          },
          "PushDashtranscodedDashurlDashtoDashdbLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/video-broadcast/dev/1537289174037-2018-09-18T16:46:14.037Z/video-broadcast.zip"
              },
              "FunctionName": "video-broadcast-dev-push-transcoded-url-to-db",
              "Handler": "push-transcoded-url-to-db/index.handler",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 30,
              "DeadLetterConfig": {
                "TargetArn": "arn:aws:sns:ap-northeast-1:373534280245:prod-alert"
              },
              "Environment": {
                "Variables": {
                  "S3_TRANSCODED_BUCKET_URL": "https://dr8yjtnfa00ar.cloudfront.net"
                }
              }
            },
            "DependsOn": [
              "PushDashtranscodedDashurlDashtoDashdbLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PushDashtranscodedDashurlDashtoDashdbLambdaVersiong8oD3MJUrz3sRlLH5FOlSZeC5EC3H11NYf6pCMJe94": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PushDashtranscodedDashurlDashtoDashdbLambdaFunction"
              },
              "CodeSha256": "IqoeBC+pPhngrdqAGuSM2S0NZhI+S9w3vcJ29BOtE/Q="
            }
          },
          "GetDashallDashvideosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/video-broadcast/dev/1537289174037-2018-09-18T16:46:14.037Z/video-broadcast.zip"
              },
              "FunctionName": "video-broadcast-dev-get-all-videos",
              "Handler": "get-all-videos/index.handler",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 30,
              "DeadLetterConfig": {
                "TargetArn": "arn:aws:sns:ap-northeast-1:373534280245:prod-alert"
              }
            },
            "DependsOn": [
              "GetDashallDashvideosLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "GetDashallDashvideosLambdaVersionRAHrcLURlRVTDzbI5VYSGJXlgVkiF2mkkx00LKdhxiE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashallDashvideosLambdaFunction"
              },
              "CodeSha256": "IqoeBC+pPhngrdqAGuSM2S0NZhI+S9w3vcJ29BOtE/Q="
            }
          },
          "PushDashuserDashvotesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/video-broadcast/dev/1537289174037-2018-09-18T16:46:14.037Z/video-broadcast.zip"
              },
              "FunctionName": "video-broadcast-dev-push-user-votes",
              "Handler": "push-user-votes/index.handler",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 30,
              "DeadLetterConfig": {
                "TargetArn": "arn:aws:sns:ap-northeast-1:373534280245:prod-alert"
              }
            },
            "DependsOn": [
              "PushDashuserDashvotesLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PushDashuserDashvotesLambdaVersionpEl5YczieaOo2iYeN9YAYiLVJxoq4xRAKp9nRVAiRhw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PushDashuserDashvotesLambdaFunction"
              },
              "CodeSha256": "IqoeBC+pPhngrdqAGuSM2S0NZhI+S9w3vcJ29BOtE/Q="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-video-broadcast",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceAllDashvideos": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "all-videos",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePushDashvotes": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "push-votes",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAllDashvideosOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAllDashvideos"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPushDashvotesOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePushDashvotes"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAllDashvideosGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.querystring.accessToken": false,
                "method.request.header.Authorization": false
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAllDashvideos"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDashallDashvideosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodPushDashvotesPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.querystring.accessToken": false,
                "method.request.header.Authorization": false
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePushDashvotes"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PushDashuserDashvotesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1537289174318": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodAllDashvideosGet",
              "ApiGatewayMethodPushDashvotesPost"
            ]
          },
          "GetDashallDashvideosLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashallDashvideosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PushDashuserDashvotesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PushDashuserDashvotesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PushDashtranscodedDashurlDashtoDashdbSnsSubscriptionVideotranscodecomplete": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": "arn:aws:sns:ap-northeast-1:373534280245:video-transcode-complete",
              "Protocol": "lambda",
              "Endpoint": {
                "Fn::GetAtt": [
                  "PushDashtranscodedDashurlDashtoDashdbLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "PushDashtranscodedDashurlDashtoDashdbLambdaPermissionVideotranscodecompleteSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PushDashtranscodedDashurlDashtoDashdbLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "sns.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": "arn:aws:sns:ap-northeast-1:373534280245:video-transcode-complete"
            }
          },
          "S3BucketPermissions": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": "video-transcoded-yewnsdiqsdfq-dev",
              "PolicyDocument": {
                "Statement": [
                  {
                    "Principal": "*",
                    "Action": [
                      "s3:GetObject"
                    ],
                    "Effect": "Allow",
                    "Sid": "AddPerm",
                    "Resource": "arn:aws:s3:::video-transcoded-yewnsdiqsdfq-dev/*"
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "TranscodeDashvideoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "TranscodeDashvideoLambdaVersion8VPMohfbyGjiV5Q6xO3QOmNbdc7caNviQ94FZ8rk"
            }
          },
          "PushDashtranscodedDashurlDashtoDashdbLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PushDashtranscodedDashurlDashtoDashdbLambdaVersiong8oD3MJUrz3sRlLH5FOlSZeC5EC3H11NYf6pCMJe94"
            }
          },
          "GetDashallDashvideosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashallDashvideosLambdaVersionRAHrcLURlRVTDzbI5VYSGJXlgVkiF2mkkx00LKdhxiE"
            }
          },
          "PushDashuserDashvotesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PushDashuserDashvotesLambdaVersionpEl5YczieaOo2iYeN9YAYiLVJxoq4xRAKp9nRVAiRhw"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.ap-northeast-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "upload_bucket": "video-upload-qejsadfqwefadfafqwef-dev",
      "transcoded_bucket": "video-transcoded-yewnsdiqsdfq-dev",
      "dlq_sns_arn": "arn:aws:sns:ap-northeast-1:373534280245:prod-alert",
      "elastic_transcoder_pipelineid": {
        "dev": "1536490765349-wdq1g6",
        "prod": null
      }
    },
    "pluginsData": {},
    "functions": {
      "transcode-video": {
        "handler": "transcode-video/index.handler",
        "onError": "arn:aws:sns:ap-northeast-1:373534280245:prod-alert",
        "environment": {
          "ELASTIC_TRANSCODER_PIPELINE_ID": "1536490765349-wdq1g6",
          "ELASTIC_TRANSCODER_REGION": "ap-northeast-1"
        },
        "events": [],
        "name": "video-broadcast-dev-transcode-video",
        "package": {},
        "memory": 512,
        "timeout": 30,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "push-transcoded-url-to-db": {
        "handler": "push-transcoded-url-to-db/index.handler",
        "onError": "arn:aws:sns:ap-northeast-1:373534280245:prod-alert",
        "events": [
          {
            "sns": "arn:aws:sns:ap-northeast-1:373534280245:video-transcode-complete"
          }
        ],
        "environment": {
          "S3_TRANSCODED_BUCKET_URL": "https://dr8yjtnfa00ar.cloudfront.net"
        },
        "name": "video-broadcast-dev-push-transcoded-url-to-db",
        "package": {},
        "memory": 512,
        "timeout": 30,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "get-all-videos": {
        "handler": "get-all-videos/index.handler",
        "onError": "arn:aws:sns:ap-northeast-1:373534280245:prod-alert",
        "events": [
          {
            "http": {
              "path": "all-videos",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.querystring.accessToken": false,
                  "method.request.header.Authorization": false
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "video-broadcast-dev-get-all-videos",
        "package": {},
        "memory": 512,
        "timeout": 30,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "push-user-votes": {
        "handler": "push-user-votes/index.handler",
        "onError": "arn:aws:sns:ap-northeast-1:373534280245:prod-alert",
        "events": [
          {
            "http": {
              "path": "push-votes",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.querystring.accessToken": false,
                  "method.request.header.Authorization": false
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "video-broadcast-dev-push-user-votes",
        "package": {},
        "memory": 512,
        "timeout": 30,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "S3BucketPermissions": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": "video-transcoded-yewnsdiqsdfq-dev",
            "PolicyDocument": {
              "Statement": [
                {
                  "Principal": "*",
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Effect": "Allow",
                  "Sid": "AddPerm",
                  "Resource": "arn:aws:s3:::video-transcoded-yewnsdiqsdfq-dev/*"
                }
              ]
            }
          }
        }
      },
      "Outputs": {}
    },
    "artifact": "/Users/sunhua/Documents/Projects/github.com/bnusunny/serverless-video-broadcast-app/lambda/.serverless/video-broadcast.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/video-broadcast/dev/1537289174037-2018-09-18T16:46:14.037Z",
    "artifact": "video-broadcast.zip"
  }
}